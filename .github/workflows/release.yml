name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  build:
    name: GitHub
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # Set-up build environment
      - uses: azure/setup-helm@v4.3.0
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: Install go-licenses
        run: go install github.com/google/go-licenses@v1.6.0
      - name: Pull dependencies
        run: go mod vendor
      # Build release artifacts
      - run: mkdir -p ./release_artifacts
      - name: Build driver binaries
        run: >
          go build -o ./release_artifacts/docker-machine-driver-pve ./cmd/docker-machine-driver-pve
          && (cd ./release_artifacts && sha256sum ./docker-machine-driver-pve > checksums.txt)
        env:
          CGO_ENABLED: 0
          GOOS: linux
          GOARCH: amd64
      - name: Package Helm Chart
        run: >
          CHECKSUM="$(sha256sum ./release_artifacts/docker-machine-driver-pve | cut -d' ' -f1)"
          && yq -i ".nodeDriver.url = \"${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/releases/download/${GITHUB_REF_NAME}/docker-machine-driver-pve\"" deploy/charts/pve-node-driver/values.yaml
          && yq -i ".nodeDriver.checksum = \"${CHECKSUM}\"" deploy/charts/pve-node-driver/values.yaml
          && cat deploy/charts/pve-node-driver/values.yaml
          && helm package ./deploy/charts/pve-node-driver \
              --version "${GITHUB_REF_NAME#v}" \
              --app-version "${GITHUB_REF_NAME}" \
              --destination ./release_artifacts
      - name: Save licenses
        run: >
          go-licenses save ./... --include_tests --force --save_path ./licenses
      - name: Generate licenses.txt
        run: >
          for FILE_PATH in $(find "./licenses" -type f | LC_ALL=C sort); do \
            echo -e "${FILE_PATH#./licenses/}:\n" >> ./release_artifacts/licenses.txt \
            && while read -r LINE; do echo "	$LINE" >> ./release_artifacts/licenses.txt; done < $FILE_PATH \
            && echo -e "" >> ./release_artifacts/licenses.txt; \
          done
      # Create the release
      - name: Create release
        env:
          GH_TOKEN: ${{ github.token }}
        run: >
          gh release create "${GITHUB_REF_NAME}" \
            --repo="${GITHUB_REPOSITORY}" \
            --title="${GITHUB_REF_NAME}" \
            --draft \
            --generate-notes \
            ./release_artifacts/*
